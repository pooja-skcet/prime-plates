package com.example.demo.service.impl;
import com.example.demo.dto.OrderDTO;
import com.example.demo.entity.Order;
import com.example.demo.repository.OrderRepository;
import com.example.demo.service.OrderService;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.stream.Collectors;

@Service
public class OrderServiceImpl implements OrderService{
	
	
	

	    @Autowired
	    private OrderRepository orderRepository;

	    @Autowired
	    private ModelMapper modelMapper;

	    @Override
	    public OrderDTO createOrder(OrderDTO orderDTO) {
	        Order order = modelMapper.map(orderDTO, Order.class);
	        order = orderRepository.save(order);
	        return modelMapper.map(order, OrderDTO.class);
	    }

	    @Override
	    public OrderDTO getOrderById(Long orderId) {
	        Order order = orderRepository.findById(orderId).orElseThrow(() -> new RuntimeException("Order not found"));
	        return modelMapper.map(order, OrderDTO.class);
	    }

	    @Override
	    public List<OrderDTO> getAllOrders() {
	        return orderRepository.findAll().stream()
	                .map(order -> modelMapper.map(order, OrderDTO.class))
	                .collect(Collectors.toList());
	    }

	    @Override
	    public OrderDTO updateOrder(Long orderId, OrderDTO orderDTO) {
	        Order order = orderRepository.findById(orderId).orElseThrow(() -> new RuntimeException("Order not found"));
	        modelMapper.map(orderDTO, order);
	        order = orderRepository.save(order);
	        return modelMapper.map(order, OrderDTO.class);
	    }

	    @Override
	    public void deleteOrder(Long orderId) {
	        orderRepository.deleteById(orderId);
	    }
	

}
